fig3_data$treatment <- forcats::fct_relevel(fig3_data$treatment, c("sanguinea_1", "sanguinea_20"))
set.seed(1010)
ggplot(fig3_data, aes(y = .data$mean_activity,
shape = .data$treatment,
fill = .data$aggression_presence,
ymax = .data$max_activity,
ymin = .data$min_activity)) +
geom_pointrange(aes(x = as.factor(.data$territory)), cex = 0.5,
position = position_jitter(width = 0.25), alpha = 0.7,
col= "black") +
scale_x_discrete(labels = c("Outside", "Inside")) +
scale_fill_manual(name = "Number of \nF. sanguinea ants",
values = c("green", "red"), labels = c("1", "20")) +
scale_color_manual(name = "Aggression",
values = c(3, 2), labels = c("absent", "present")) +
ylab("Maximal number of the F. fusca ants")+
xlab("Colony location relative to F. rufa territory")+
labs(color = "Aggression", shape = "Aggression")
}
generate_fig3()
generate_fig3 <- function(){
data("aggression_probing_tests", envir = environment())
# extract IDs of the test in which there was no aggression at all
no_aggression_tests <- aggression_probing_tests %>%
transform_to_single_val() %>%
split(.$test_ID) %>%
purrr::map(process_test_data) %>%
do.call(rbind, .) %>%
filter(.data$ant_number == 0) %>%
select(.data$test_ID) %>%
unlist()
theme_set(theme_bw())
fig3_data <- aggression_probing_tests %>%
filter(.data$date > as.Date("2019-01-01")) %>%
mutate(mean_activity = transform_to_single_val(., column = "actual_fus_numb", mode = 3)$actual_fus_numb,
min_activity = transform_to_single_val(., column = "actual_fus_numb", mode = 1)$actual_fus_numb,
max_activity = transform_to_single_val(., column = "actual_fus_numb", mode = 2)$actual_fus_numb) %>%
mutate(aggression_presence = !(.data$test_ID %in% no_aggression_tests)) %>%
group_by(.data$territory, .data$aggression_presence, .data$treatment, .data$colony, .data$date) %>%
summarise(mean_activity = round(max(stats::na.omit(.data$mean_activity))),
min_activity = round(max(stats::na.omit(.data$min_activity))),
max_activity = round(max(stats::na.omit(.data$max_activity))))
fig3_data$aggression_presence <- as.factor(fig3_data$aggression_presence)
fig3_data$treatment <- forcats::fct_relevel(fig3_data$treatment, c("sanguinea_1", "sanguinea_20"))
set.seed(1010)
ggplot(fig3_data, aes(y = .data$mean_activity,
shape = .data$treatment,
fill = .data$aggression_presence,
ymax = .data$max_activity,
ymin = .data$min_activity)) +
geom_pointrange(aes(x = as.factor(.data$territory)), cex = 0.5,
position = position_jitter(width = 0.25), alpha = 0.7,
colour= "black") +
scale_x_discrete(labels = c("Outside", "Inside")) +
scale_fill_manual(name = "Number of \nF. sanguinea ants",
values = c("green", "red"), labels = c("1", "20")) +
scale_color_manual(name = "Aggression",
values = c(3, 2), labels = c("absent", "present")) +
ylab("Maximal number of the F. fusca ants")+
xlab("Colony location relative to F. rufa territory")+
labs(color = "Aggression", shape = "Aggression")
}
generate_fig3()
generate_fig3 <- function(){
data("aggression_probing_tests", envir = environment())
# extract IDs of the test in which there was no aggression at all
no_aggression_tests <- aggression_probing_tests %>%
transform_to_single_val() %>%
split(.$test_ID) %>%
purrr::map(process_test_data) %>%
do.call(rbind, .) %>%
filter(.data$ant_number == 0) %>%
select(.data$test_ID) %>%
unlist()
theme_set(theme_bw())
fig3_data <- aggression_probing_tests %>%
filter(.data$date > as.Date("2019-01-01")) %>%
mutate(mean_activity = transform_to_single_val(., column = "actual_fus_numb", mode = 3)$actual_fus_numb,
min_activity = transform_to_single_val(., column = "actual_fus_numb", mode = 1)$actual_fus_numb,
max_activity = transform_to_single_val(., column = "actual_fus_numb", mode = 2)$actual_fus_numb) %>%
mutate(aggression_presence = !(.data$test_ID %in% no_aggression_tests)) %>%
group_by(.data$territory, .data$aggression_presence, .data$treatment, .data$colony, .data$date) %>%
summarise(mean_activity = round(max(stats::na.omit(.data$mean_activity))),
min_activity = round(max(stats::na.omit(.data$min_activity))),
max_activity = round(max(stats::na.omit(.data$max_activity))))
fig3_data$aggression_presence <- as.factor(fig3_data$aggression_presence)
fig3_data$treatment <- forcats::fct_relevel(fig3_data$treatment, c("sanguinea_1", "sanguinea_20"))
set.seed(1010)
ggplot(fig3_data, aes(y = .data$mean_activity,
shape = .data$treatment,
fill = .data$aggression_presence,
ymax = .data$max_activity,
ymin = .data$min_activity)) +
geom_pointrange(aes(x = as.factor(.data$territory)), cex = 0.5,
position = position_jitter(width = 0.25), alpha = 0.7) +
scale_x_discrete(labels = c("Outside", "Inside")) +
scale_fill_manual(name = "Number of \nF. sanguinea ants",
values = c("green", "red"), labels = c("1", "20")) +
scale_color_manual(name = "Aggression",
values = c(3, 2), labels = c("absent", "present")) +
ylab("Maximal number of the F. fusca ants")+
xlab("Colony location relative to F. rufa territory")+
labs(color = "Aggression", shape = "Aggression")
}
generate_fig3()
generate_fig3 <- function(){
data("aggression_probing_tests", envir = environment())
# extract IDs of the test in which there was no aggression at all
no_aggression_tests <- aggression_probing_tests %>%
transform_to_single_val() %>%
split(.$test_ID) %>%
purrr::map(process_test_data) %>%
do.call(rbind, .) %>%
filter(.data$ant_number == 0) %>%
select(.data$test_ID) %>%
unlist()
theme_set(theme_bw())
fig3_data <- aggression_probing_tests %>%
filter(.data$date > as.Date("2019-01-01")) %>%
mutate(mean_activity = transform_to_single_val(., column = "actual_fus_numb", mode = 3)$actual_fus_numb,
min_activity = transform_to_single_val(., column = "actual_fus_numb", mode = 1)$actual_fus_numb,
max_activity = transform_to_single_val(., column = "actual_fus_numb", mode = 2)$actual_fus_numb) %>%
mutate(aggression_presence = !(.data$test_ID %in% no_aggression_tests)) %>%
group_by(.data$territory, .data$aggression_presence, .data$treatment, .data$colony, .data$date) %>%
summarise(mean_activity = round(max(stats::na.omit(.data$mean_activity))),
min_activity = round(max(stats::na.omit(.data$min_activity))),
max_activity = round(max(stats::na.omit(.data$max_activity))))
fig3_data$aggression_presence <- as.factor(fig3_data$aggression_presence)
fig3_data$treatment <- forcats::fct_relevel(fig3_data$treatment, c("sanguinea_1", "sanguinea_20"))
set.seed(1010)
ggplot(fig3_data, aes(y = .data$mean_activity,
shape = .data$treatment,
fill = .data$aggression_presence,
ymax = .data$max_activity,
ymin = .data$min_activity)) +
geom_pointrange(aes(x = as.factor(.data$territory)), cex = 0.5,
position = position_jitter(width = 0.25), alpha = 0.7) +
scale_x_discrete(labels = c("Outside", "Inside")) +
scale_fill_manual(
values = c("green", "red")) +
scale_color_manual(name = "Aggression",
values = c(3, 2), labels = c("absent", "present")) +
ylab("Maximal number of the F. fusca ants")+
xlab("Colony location relative to F. rufa territory")+
labs(color = "Aggression", shape = "Aggression")
}
generate_fig3()
generate_fig3 <- function(){
data("aggression_probing_tests", envir = environment())
# extract IDs of the test in which there was no aggression at all
no_aggression_tests <- aggression_probing_tests %>%
transform_to_single_val() %>%
split(.$test_ID) %>%
purrr::map(process_test_data) %>%
do.call(rbind, .) %>%
filter(.data$ant_number == 0) %>%
select(.data$test_ID) %>%
unlist()
theme_set(theme_bw())
fig3_data <- aggression_probing_tests %>%
filter(.data$date > as.Date("2019-01-01")) %>%
mutate(mean_activity = transform_to_single_val(., column = "actual_fus_numb", mode = 3)$actual_fus_numb,
min_activity = transform_to_single_val(., column = "actual_fus_numb", mode = 1)$actual_fus_numb,
max_activity = transform_to_single_val(., column = "actual_fus_numb", mode = 2)$actual_fus_numb) %>%
mutate(aggression_presence = !(.data$test_ID %in% no_aggression_tests)) %>%
group_by(.data$territory, .data$aggression_presence, .data$treatment, .data$colony, .data$date) %>%
summarise(mean_activity = round(max(stats::na.omit(.data$mean_activity))),
min_activity = round(max(stats::na.omit(.data$min_activity))),
max_activity = round(max(stats::na.omit(.data$max_activity))))
fig3_data$aggression_presence <- as.factor(fig3_data$aggression_presence)
fig3_data$treatment <- forcats::fct_relevel(fig3_data$treatment, c("sanguinea_1", "sanguinea_20"))
set.seed(1010)
ggplot(fig3_data, aes(y = .data$mean_activity,
shape = .data$treatment,
fill = .data$aggression_presence,
ymax = .data$max_activity,
ymin = .data$min_activity)) +
geom_pointrange(aes(x = as.factor(.data$territory), fill = .data$aggression_presence), cex = 0.5,
position = position_jitter(width = 0.25), alpha = 0.7) +
scale_x_discrete(labels = c("Outside", "Inside")) +
scale_fill_manual(
values = c("green", "red")) +
scale_color_manual(name = "Aggression",
values = c(3, 2), labels = c("absent", "present")) +
ylab("Maximal number of the F. fusca ants")+
xlab("Colony location relative to F. rufa territory")+
labs(color = "Aggression", shape = "Aggression")
}
generate_fig3()
generate_fig3 <- function(){
data("aggression_probing_tests", envir = environment())
# extract IDs of the test in which there was no aggression at all
no_aggression_tests <- aggression_probing_tests %>%
transform_to_single_val() %>%
split(.$test_ID) %>%
purrr::map(process_test_data) %>%
do.call(rbind, .) %>%
filter(.data$ant_number == 0) %>%
select(.data$test_ID) %>%
unlist()
theme_set(theme_bw())
fig3_data <- aggression_probing_tests %>%
filter(.data$date > as.Date("2019-01-01")) %>%
mutate(mean_activity = transform_to_single_val(., column = "actual_fus_numb", mode = 3)$actual_fus_numb,
min_activity = transform_to_single_val(., column = "actual_fus_numb", mode = 1)$actual_fus_numb,
max_activity = transform_to_single_val(., column = "actual_fus_numb", mode = 2)$actual_fus_numb) %>%
mutate(aggression_presence = !(.data$test_ID %in% no_aggression_tests)) %>%
group_by(.data$territory, .data$aggression_presence, .data$treatment, .data$colony, .data$date) %>%
summarise(mean_activity = round(max(stats::na.omit(.data$mean_activity))),
min_activity = round(max(stats::na.omit(.data$min_activity))),
max_activity = round(max(stats::na.omit(.data$max_activity))))
fig3_data$aggression_presence <- as.factor(fig3_data$aggression_presence)
fig3_data$treatment <- forcats::fct_relevel(fig3_data$treatment, c("sanguinea_1", "sanguinea_20"))
set.seed(1010)
ggplot(fig3_data, aes(y = .data$mean_activity,
shape = .data$treatment,
color = .data$aggression_presence,
ymax = .data$max_activity,
ymin = .data$min_activity)) +
geom_pointrange(aes(x = as.factor(.data$territory)), cex = 0.5,
position = position_jitter(width = 0.25), alpha = 0.7) +
scale_x_discrete(labels = c("Outside", "Inside")) +
scale_shape_manual(name = "Number of \nF. sanguinea ants",
values = c(15, 17), labels = c("1", "20")) +
scale_color_manual(name = "Aggression",
values = c(3, 2), labels = c("absent", "present")) +
ylab("Maximal number of the F. fusca ants")+
xlab("Colony location relative to F. rufa territory")+
labs(color = "Aggression", shape = "Aggression")
}
#' Generate figure 4
#' @export
generate_fig4 <- function(){
data("agitation_tests", envir = environment())
agitation_tests_summary <- group_by(agitation_tests, .data$colony, .data$treatment) %>%
summarise(aggression_duration = sum(.data$aggression_duration)) %>%
left_join(distinct(select(agitation_tests, .data$colony, .data$territory)))
theme_set(theme_bw())
ggplot(agitation_tests_summary, aes(y = .data$aggression_duration)) +
geom_boxplot(aes(x = as.factor(.data$territory))) +
scale_x_discrete(labels = c("Outside", "Inside")) +
ylab("Aggression duration [sec]") +
xlab("Colony location relative to F. rufa territory") +
facet_wrap(~.data$treatment)
}
generate_fig3()
generate_fig3 <- function(){
data("aggression_probing_tests", envir = environment())
# extract IDs of the test in which there was no aggression at all
no_aggression_tests <- aggression_probing_tests %>%
transform_to_single_val() %>%
split(.$test_ID) %>%
purrr::map(process_test_data) %>%
do.call(rbind, .) %>%
filter(.data$ant_number == 0) %>%
select(.data$test_ID) %>%
unlist()
theme_set(theme_bw())
fig3_data <- aggression_probing_tests %>%
filter(.data$date > as.Date("2019-01-01")) %>%
mutate(mean_activity = transform_to_single_val(., column = "actual_fus_numb", mode = 3)$actual_fus_numb,
min_activity = transform_to_single_val(., column = "actual_fus_numb", mode = 1)$actual_fus_numb,
max_activity = transform_to_single_val(., column = "actual_fus_numb", mode = 2)$actual_fus_numb) %>%
mutate(aggression_presence = !(.data$test_ID %in% no_aggression_tests)) %>%
group_by(.data$territory, .data$aggression_presence, .data$treatment, .data$colony, .data$date) %>%
summarise(mean_activity = round(max(stats::na.omit(.data$mean_activity))),
min_activity = round(max(stats::na.omit(.data$min_activity))),
max_activity = round(max(stats::na.omit(.data$max_activity))))
fig3_data$aggression_presence <- as.factor(fig3_data$aggression_presence)
fig3_data$treatment <- forcats::fct_relevel(fig3_data$treatment, c("sanguinea_1", "sanguinea_20"))
set.seed(1001)
ggplot(fig3_data, aes(y = .data$mean_activity,
shape = .data$treatment,
color = .data$aggression_presence,
ymax = .data$max_activity,
ymin = .data$min_activity)) +
geom_pointrange(aes(x = as.factor(.data$territory)), cex = 0.5,
position = position_jitter(width = 0.25), alpha = 0.7) +
scale_x_discrete(labels = c("Outside", "Inside")) +
scale_shape_manual(name = "Number of \nF. sanguinea ants",
values = c(15, 17), labels = c("1", "20")) +
scale_color_manual(name = "Aggression",
values = c(3, 2), labels = c("absent", "present")) +
ylab("Maximal number of the F. fusca ants")+
xlab("Colony location relative to F. rufa territory")+
labs(color = "Aggression", shape = "Aggression")
}
generate_fig3()
generate_fig3 <- function(){
data("aggression_probing_tests", envir = environment())
# extract IDs of the test in which there was no aggression at all
no_aggression_tests <- aggression_probing_tests %>%
transform_to_single_val() %>%
split(.$test_ID) %>%
purrr::map(process_test_data) %>%
do.call(rbind, .) %>%
filter(.data$ant_number == 0) %>%
select(.data$test_ID) %>%
unlist()
theme_set(theme_bw())
fig3_data <- aggression_probing_tests %>%
filter(.data$date > as.Date("2019-01-01")) %>%
mutate(mean_activity = transform_to_single_val(., column = "actual_fus_numb", mode = 3)$actual_fus_numb,
min_activity = transform_to_single_val(., column = "actual_fus_numb", mode = 1)$actual_fus_numb,
max_activity = transform_to_single_val(., column = "actual_fus_numb", mode = 2)$actual_fus_numb) %>%
mutate(aggression_presence = !(.data$test_ID %in% no_aggression_tests)) %>%
group_by(.data$territory, .data$aggression_presence, .data$treatment, .data$colony, .data$date) %>%
summarise(mean_activity = round(max(stats::na.omit(.data$mean_activity))),
min_activity = round(max(stats::na.omit(.data$min_activity))),
max_activity = round(max(stats::na.omit(.data$max_activity))))
fig3_data$aggression_presence <- as.factor(fig3_data$aggression_presence)
fig3_data$treatment <- forcats::fct_relevel(fig3_data$treatment, c("sanguinea_1", "sanguinea_20"))
set.seed(10)
ggplot(fig3_data, aes(y = .data$mean_activity,
shape = .data$treatment,
color = .data$aggression_presence,
ymax = .data$max_activity,
ymin = .data$min_activity)) +
geom_pointrange(aes(x = as.factor(.data$territory)), cex = 0.5,
position = position_jitter(width = 0.25), alpha = 0.7) +
scale_x_discrete(labels = c("Outside", "Inside")) +
scale_shape_manual(name = "Number of \nF. sanguinea ants",
values = c(15, 17), labels = c("1", "20")) +
scale_color_manual(name = "Aggression",
values = c(3, 2), labels = c("absent", "present")) +
ylab("Maximal number of the F. fusca ants")+
xlab("Colony location relative to F. rufa territory")+
labs(color = "Aggression", shape = "Aggression")
}
generate_fig3()
gps_data <- read.table("gps_coordinates.csv", sep = ",")
head(gsp_data)
head(gps_data)
colnames(gps_data) <- c("colony ID", "latitude", "longitude")
devtools::load_all(0)
devtools::load_all()
data("aggression_probing_tests")
colonies <- unique(aggression_probing_tests$colony)
colonies
colnames(aggression_probing_tests)
colonies <- c(colonies, unique(aggression_probing_tests$alien_colony_ID))
colonies
gps_data$`colony ID`
gsub("([1-9].{2}) ", "\(1)-", gps_data$`colony ID`)
gsub("([1-9].{2}) ", "\1-", gps_data$`colony ID`)
gsub("([1-9].{2}) ", "\\1-", gps_data$`colony ID`)
gsub("([1-9].{2}) ", "(\\1)-", gps_data$`colony ID`)
grep("([1-9].{2}) ", gps_data$`colony ID`)
grep("([1-9]{2}) ", gps_data$`colony ID`)
grep("([1-9]) ", gps_data$`colony ID`)
grep("a.{2}", "aabba")
grep("a.{2}", "abba")
grep("a.{2,3}", "abba")
grep("a{2,3}", "abba")
grep("a{2}", "abba")
grep("a{1}", "abba")
grep("([1-9]{2}) ", gps_data$`colony ID`)
grep("[a-z]{1}", "abba")
grep("[a-z]{2}", "abba")
grep("[a-z]{3}", "abba")
grep("([a-z]){3}", "abba")
grep("(\d{2}) ", gps_data$`colony ID`)
grep("([1-9][1-9]) ", gps_data$`colony ID`)
grep("([1-9][1-9])", gps_data$`colony ID`)
grep("([1-9][1-9]) ", gps_data$`colony ID`)
grep("([1-9]+[1-9]+) ", gps_data$`colony ID`)
grep("([1-9]?[1-9]?) ", gps_data$`colony ID`)
grep("[1-9]+[1-9]+ ", gps_data$`colony ID`)
grep("[1-9]{1} ", gps_data$`colony ID`)
grep("[1-9]{3} ", gps_data$`colony ID`)
grep("[1-9]{2} ", gps_data$`colony ID`)
grep("[1-9]{2,2} ", gps_data$`colony ID`)
grep("[1-9]{3} ", gps_data$`colony ID`)
grep("[1-9]{3}", gps_data$`colony ID`)
grep("[1-9]{2}", gps_data$`colony ID`)
grep("[1-9]{2}", gps_data$`colony ID`, value = TRUE)
grep("[1-9]{2} ", gps_data$`colony ID`, value = TRUE)
gsub("([1-9]{2}) ", "\\(1)-",gps_data$`colony ID`)
gsub("[1-9]{2}( )", "\\(1)-",gps_data$`colony ID`)
gsub("([1-9]{2}) ", "\\(1)-",gps_data$`colony ID`)
gsub("([1-9]{2}) ", "\\1-",gps_data$`colony ID`)
gps_data$`colony ID` <- gsub("([1-9]{2}) ", "\\1-",gps_data$`colony ID`)
setdiff(colonies, gps_data$`colony ID`)
gps_data$`colony ID` <- gsub("([1-9]{2}-[1-9]{2})[1-9]{1}", "\\1",gps_data$`colony ID`)
gps_data$`colony ID`
gsub("([1-9]{2}-[1-9]{2})[1-9]{1}", "\\1",gps_data$`colony ID`)
grep("([1-9]{2}-[1-9]{2})[1-9]{1}",gps_data$`colony ID`, value = TRUE)
gps_data$`colony ID` <- gsub("([1-9]{2}-[1-9]{2})[1-9]{1}", "\\1",gps_data$`colony ID`)
grep("([1-9]{2}-[1-9]{2})[1-9]{1}",gps_data$`colony ID`, value = TRUE)
gps_data$`colony ID`
setdiff(colonies, gps_data$`colony ID`)
aggression_probing_tests[aggression_probing_tests$colony=="17-41",]
gps_data$`colony ID`[gps_data$`colony ID`=="F sang 453"] <- "F sang 45"
setdiff(colonies, gps_data$`colony ID`)
gps_data <- read.table("gps_coordinates.csv", sep = ",")
colnames(gps_data) <- c("colony ID", "latitude", "longitude")
colonies <- unique(aggression_probing_tests$colony)
colonies <- c(colonies, unique(aggression_probing_tests$alien_colony_ID))
gps_data$`colony ID` <- gsub("([1-9]{2}) ", "\\1-",gps_data$`colony ID`)
gps_data$`colony ID` <- gsub("([1-9]{2}-[1-9]{2})[1-9]{1,2}", "\\1",
gps_data$`colony ID`)
gps_data$`colony ID`[gps_data$`colony ID`=="F sang 453"] <- "F sang 45"
gps_data$`colony ID`[gps_data$`colony ID`=="Kopiec"] <- "P1"
setdiff(colonies, gps_data$`colony ID`)
gps_data <- gps_data[gps_data$`colony ID` %in% colonies]
gps_data <- gps_data[gps_data$`colony ID` %in% colonies,]
gps_data
GPS_coordinates <- gps_data
colnames(aggression_probing_tests)
colnames(GPS_coordinates)[1] <- "colony"
usethis::use_data(GPS_coordinates)
devtools::document()
library(fusca.defence)
data(package = "fusca.defence")
agitation_tests
colnames(agitation_tests)
agitation_tests[is.na(agitation_tests$alien_colony_ID),]
aggression_probing_tests[aggression_probing_tests$colony=="19-7",]
aggression_probing_tests[aggression_probing_tests$colony=="19-5",]
agitation_tests[agitation_tests$alien_colony_ID=="19-5",]
agitation_tests[agitation_tests$colony=="19-5",]
agitation_tests[agitation_tests$colony=="19-5"&agitation_tests$treatment=="F. sanguinea",]
agitation_tests[agitation_tests$colony=="19-5"&agitation_tests$treatment=="F. sanguinea",]$alien_colony_ID
levels(agitation_tests$alien_colony_ID)
levels(agitation_tests$alien_colony_ID) <- c(levels(agitation_tests$alien_colony_ID), "Fs71")
agitation_tests[agitation_tests$colony=="19-5"&agitation_tests$treatment=="F. sanguinea",]$alien_colony_ID
agitation_tests[agitation_tests$colony=="19-5"&agitation_tests$treatment=="F. sanguinea",]$alien_colony_ID <- "Fs71"
agitation_tests[is.na(agitation_tests$alien_colony_ID),]
aggression_probing_tests[aggression_probing_tests$colony=="19-3",]
agitation_tests[agitation_tests$colony=="19-3"&agitation_tests$treatment=="F. sanguinea",]$alien_colony_ID
agitation_tests[agitation_tests$colony=="19-3"&agitation_tests$treatment=="F. sanguinea",]$alien_colony_ID <- "Fs71"
agitation_tests[agitation_tests$colony=="19-15"&agitation_tests$treatment=="F. sanguinea",]$alien_colony_ID
aggression_probing_tests[aggression_probing_tests$colony=="19-15",]
levels(agitation_tests$alien_colony_ID) <- c(levels(agitation_tests$alien_colony_ID), "Fs63")
agitation_tests[agitation_tests$colony=="19-3"&agitation_tests$treatment=="F. sanguinea",]$alien_colony_ID
agitation_tests[agitation_tests$colony=="19-15"&agitation_tests$treatment=="F. sanguinea",]$alien_colony_ID
agitation_tests[agitation_tests$colony=="19-15"&agitation_tests$treatment=="F. sanguinea",]$alien_colony_ID <- "Tf63"
agitation_tests[agitation_tests$colony=="19-15"&agitation_tests$treatment=="F. sanguinea",]$alien_colony_ID <- "Fs63"
agitation_tests[is.na(agitation_tests$alien_colony_ID),]
agitation_tests[agitation_tests$colony %in% agitation_tests[is.na(agitation_tests$alien_colony_ID),]$colony&agitation_tests$treatment=="F. sanguinea",]$alien_colony_ID
agitation_tests[agitation_tests$colony %in% agitation_tests[is.na(agitation_tests$alien_colony_ID),]$colony&agitation_tests$treatment=="F. sanguinea",]
aggression_probing_tests[aggression_probing_tests$colony%in%agitation_tests[is.na(agitation_tests$alien_colony_ID),]
)
aggression_probing_tests[aggression_probing_tests$colony %in% agitation_tests[is.na(agitation_tests$alien_colony_ID),]]
aggression_probing_tests[aggression_probing_tests$colony %in% agitation_tests[is.na(agitation_tests$alien_colony_ID),],]
aggression_probing_tests[aggression_probing_tests$colony %in% agitation_tests[is.na(agitation_tests$alien_colony_ID),]%colony,]
aggression_probing_tests[aggression_probing_tests$colony %in% agitation_tests[is.na(agitation_tests$alien_colony_ID),]$colony,]
aggression_probing_tests[aggression_probing_tests$colony %in% agitation_tests[is.na(agitation_tests$alien_colony_ID),]$colony,]
agitation_tests[agitation_tests$colony=="19-1"&agitation_tests$treatment=="F. sanguinea",]$alien_colony_ID <- "Fs71"
agitation_tests[agitation_tests$colony=="19-11"&agitation_tests$treatment=="F. sanguinea",]$alien_colony_ID <- "Fs63"
agitation_tests[agitation_tests$colony=="19-18"&agitation_tests$treatment=="F. sanguinea",]$alien_colony_ID <- "Fs71"
agitation_tests[agitation_tests$colony=="19-2"&agitation_tests$treatment=="F. sanguinea",]$alien_colony_ID <- "Fs63"
agitation_tests[is.na(agitation_tests$alien_colony_ID),]
agitation_tests$alien_colony_ID
agitation_tests[is.na(agitation_tests$alien_colony_ID),]
agitation_tests[is.na(agitation_tests$alien_colony_ID),]$alien_colony_ID
agitation_tests[is.na(agitation_tests$alien_colony_ID),]$alien_colony_ID <- "Fr77"
library(devtools)
usethis::use_data(agitation_tests)
usethis::use_data(agitation_tests, overwrite = TRUE)
devtools::document()
devtools:load_all()
devtools::load_all()
aggression_probing_tests[aggression_probing_tests$colony %in% agitation_tests[is.na(agitation_tests$alien_colony_ID),]$colony,]
data("aggression_probing_tests")
usethis::use_data(aggression_probing_tests)
usethis::use_data(aggression_probing_tests, overwrite = TRUE)
devtools::load_all()
agitation_tests$alien_colony_ID
devtools::document()
gps_data$`colony ID`
colonies <- c(colonies, unique(aggression_probing_tests$alien_colony_ID))
gps_data <- read.table("gps_coordinates.csv", sep = ",")
colnames(gps_data) <- c("colony ID", "latitude", "longitude")
colonies <- unique(aggression_probing_tests$colony)
colonies <- c(colonies, unique(aggression_probing_tests$alien_colony_ID))
gps_data$`colony ID` <- gsub("([1-9]{2}) ", "\\1-",gps_data$`colony ID`)
gps_data$`colony ID` <- gsub("([1-9]{2}-[1-9]{2})[1-9]{1,2}", "\\1",
gps_data$`colony ID`)
gps_data$`colony ID`[gps_data$`colony ID`=="F sang 453"] <- "F sang 45"
gps_data$`colony ID`[gps_data$`colony ID`=="Kopiec"] <- "P1"
gps_data <- gps_data[gps_data$`colony ID` %in% colonies,]
gps_data$`colony ID`
unique(aggression_probing_tests$alien_colony_ID)
unique(agiatation_tests$alien_colony_ID)
unique(agitation_tests$alien_colony_ID)
colonies
agitation_tests$alien_colony_ID
agitation_tests[agitation_tests$alien_colony_ID=="Fr122",]
aggression_probing_tests[aggression_probing_tests$colony=="20-21",]
levels(agitation_tests$alien_colony_ID)
levels(agitation_tests$alien_colony_ID)[levels(agitation_tests$alien_colony_ID)=="Fp122"] <- "Fr122"
agitation_tests$alien_colony_ID<-droplevels(agitation_tests$alien_colony_ID)
levels(agitation_tests$alien_colony_ID) <- gsub("Fs", "F sang ", levels(agitation_tests$alien_colony_ID))
levels(agitation_tests$alien_colony_ID)
colonies <- unique(aggression_probing_tests$colony)
colonies <- c(colonies, unique(aggression_probing_tests$alien_colony_ID), unique(agitation_tests$alien_colony_ID))
gps_data <- read.table("gps_coordinates.csv", sep = ",")
colnames(gps_data) <- c("colony ID", "latitude", "longitude")
colonies <- unique(aggression_probing_tests$colony)
colonies <- c(colonies, unique(aggression_probing_tests$alien_colony_ID), unique(agitation_tests$alien_colony_ID))
gps_data$`colony ID` <- gsub("([1-9]{2}) ", "\\1-",gps_data$`colony ID`)
gps_data$`colony ID` <- gsub("([1-9]{2}-[1-9]{2})[1-9]{1,2}", "\\1",
gps_data$`colony ID`)
gps_data$`colony ID`[gps_data$`colony ID`=="F sang 453"] <- "F sang 45"
gps_data$`colony ID`[gps_data$`colony ID`=="Kopiec"] <- "P1"
gps_data <- gps_data[gps_data$`colony ID` %in% colonies,]
gps_data
usethis::use_data(gps_data)
usethis::use_data(agitation_tests, overwrite = TRUE)
devtools::document()
gps_data
